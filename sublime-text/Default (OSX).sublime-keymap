[
	// Evaluate
	{"keys": ["super+d"],
	 "command": "clojure_sublimed_eval",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Evaluate Buffer
	{"keys": ["ctrl+b"],
	 "command": "clojure_sublimed_eval_buffer",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Interrupt Pending Evaluations
	{"keys": ["ctrl+c"],
	 "command": "clojure_sublimed_interrupt_eval",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Toggle Info
	{"keys": ["ctrl+i"],
	 "command": "clojure_sublimed_toggle_info",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Clear Evaluation Results
	{"keys": ["super+r"],
	 "command": "clojure_sublimed_clear_evals",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Extras

	{"keys": ["ctrl+t"],
	 "command": "clojure_sublimed_eval_code",
	 "args": {"code": "(clojure.test/run-all-tests)"}},

	// Toggle Stacktrace
	{"keys": ["ctrl+e"],
	 "command": "clojure_sublimed_toggle_trace",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Toggle Symbol Info
	{"keys": ["ctrl+d"],
	 "command": "clojure_sublimed_lookup_symbol",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Copy Evaluation Result
	{"keys": ["super+c"],
	 "command": "clojure_sublimed_copy",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Require Namespace
	{"keys": ["ctrl+r"],
	 "command": "clojure_sublimed_require_namespace",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Reindent Lines
	{"keys": ["ctrl+f"],
	 "command": "clojure_sublimed_reindent_lines",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Reindent Buffer
	{"keys": ["ctrl+shift+f"],
	 "command": "clojure_sublimed_reindent_buffer",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

	// Insert New Line
	{"keys": ["enter"],
	 "command": "clojure_sublimed_insert_newline",
	 "context": [{"key": "selector", "operator": "equal", "operand": "source.edn | source.clojure"},
	             {"key": "auto_complete_visible", "operator": "equal", "operand": false},
	             {"key": "panel_has_focus", "operator": "equal", "operand": false}]},

	 { "keys": ["super+e"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },
]
